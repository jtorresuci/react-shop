{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from './reducers/productReducer';\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer } from \"./reducers/userReducers\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(`cartItems`) ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleWare = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","reducer","productList","productDetails","cart","userLogin","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleWare","store"],"sources":["/Users/josetorres/Desktop/z/react-ecom/react-shop/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport { productListReducer, productDetailsReducer } from './reducers/productReducer'\n\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer } from \"./reducers/userReducers\";\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer\n});\n\nconst cartItemsFromStorage = localStorage.getItem(`cartItems`) ? \nJSON.parse(localStorage.getItem('cartItems')) : []\n\nconst initialState = {\n    cart: {cartItems:cartItemsFromStorage}\n}\n\nconst middleWare = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleWare))\n);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,SAASC,kBAAkB,EAAEC,qBAAqB,QAAQ,2BAA2B;AAErF,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,gBAAgB,QAAQ,yBAAyB;AAE1D,MAAMC,OAAO,GAAGR,eAAe,CAAC;EAC5BS,WAAW,EAAEL,kBAAkB;EAC/BM,cAAc,EAAEL,qBAAqB;EACrCM,IAAI,EAAEL,WAAW;EACjBM,SAAS,EAAEL;AACf,CAAC,CAAC;AAEF,MAAMM,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAE,WAAU,CAAC,GAC9DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE;AAElD,MAAMG,YAAY,GAAG;EACjBP,IAAI,EAAE;IAACQ,SAAS,EAACN;EAAoB;AACzC,CAAC;AAED,MAAMO,UAAU,GAAG,CAAClB,KAAK,CAAC;AAE1B,MAAMmB,KAAK,GAAGtB,WAAW,CACvBS,OAAO,EACPU,YAAY,EACZf,mBAAmB,CAACF,eAAe,CAAC,GAAGmB,UAAU,CAAC,CAAC,CACpD;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}